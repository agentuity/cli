name: Go Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Generate Error Codes
      run: go generate ./...

    - name: Build
      run: go build -v .

    - name: Go Vulnerability Scan
      run: |
        go install golang.org/x/vuln/cmd/govulncheck@latest
        govulncheck ./...

    - name: Test
      run: go test -v ./...
      
    - name: Test Install Script
      run: |
        chmod +x ./install.sh
        # Test with default options (latest version)
        ./install.sh -d /tmp/agentuity-test
        # Verify installation
        /tmp/agentuity-test/agentuity --version
        # Test with specific version if available
        if [ -n "$(curl -s https://api.github.com/repos/agentuity/cli/releases | grep -m 1 '"tag_name":')" ]; then
          VERSION=$(curl -s https://api.github.com/repos/agentuity/cli/releases | grep -m 1 '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
          VERSION="${VERSION#v}"
          ./install.sh -d /tmp/agentuity-test-version -v $VERSION
          # Verify installation with specific version
          /tmp/agentuity-test-version/agentuity --version | grep -q "$VERSION" || exit 1
        fi 